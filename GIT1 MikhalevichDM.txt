JSON
 4. Создать внешний репозиторий c названием JSON.        git@github.com:DashutaMD/JSON.git
 5. Клонировать репозиторий JSON на локальный компьютер. git clone git@github.com:DashutaMD/JSON.git
 6. Внутри локального JSON создать файл “new.json”.      touch new.json
 7. Добавить файл под гит.                               git add new.json
 8. Закоммитить файл.                                    git commit -m "new_json"
 9. Отправить файл на внешний GitHub репозиторий.        git push origin
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
                                                         nano new.json 
 11. Отправить изменения на внешний репозиторий.         git add new.json   git commit -m "with info"   git push origin
 12. Создать файл preferences.json                       touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
                                                         nano preferences.json 
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
                                                         touch skills.json  nano skills.json
 15. Отправить сразу 2 файла на внешний репозиторий.     git add preferences.json skills.json   git commit -m '2FILES' git push origin
 16. На веб интерфейсе создать файл bug_report.json.     done
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.   done
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. done
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.  done
 20. Синхронизировать внешний и локальный репозиторий JSON   git pull    git push origin
 
 XML
 21. Создать внешний репозиторий c названием XML.   git@github.com:DashutaMD/XML/git
 22. Клонировать репозиторий XML на локальный компьютер.  git clone git@github.com:DashutaMD/XML.git
 23. Внутри локального XML создать файл “new.xml”.        touch new.xml
 24. Добавить файл под гит.                               git add new.xml
 25. Закоммитить файл.                                    git commit -m 'new-xml'
 26. Отправить файл на внешний GitHub репозиторий.        git push origin
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
                                                           nano new.xml
 28. Отправить изменения на внешний репозиторий.           git add new.xml    git commit -m 'newxml'  git push origin
 29. Создать файл preferences.xml                          touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
                                                           nano preferences.xml
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
                                                           nano skills.xml
 32. Сделать коммит в одну строку.                         git add preferences.xml skills.xml  git commit -m '2files'
 33. Отправить сразу 2 файла на внешний репозиторий.       git push origin
 34. На веб интерфейсе создать файл bug_report.xml.        done
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.  done
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.  done
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.   done
 38. Синхронизировать внешний и локальный репозиторий XML     git pull   git push origin
 
 TXT
 1. Создать внешний репозиторий c названием TXT.    git@github:DashutaMD/TXT.git
 2. Клонировать репозиторий TXT на локальный компьютер.  git clone git@github.com:DashutaMD/TXT.git 
 3. Внутри локального TXT создать файл “new.txt”.        touch new.txt
 4. Добавить файл под гит.                               git add new.txt
 5. Закоммитить файл.                                    git commit -m 'new-txt'
 6. Отправить файл на внешний GitHub репозиторий.        git push origin
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
                                                          nano new.txt
 8. Отправить изменения на внешний репозиторий.           git add new.txt    git commit -m 'newtxt'  git push origin
 9. Создать файл preferences.txt                          touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
                                                          nano preferences.txt
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
                                                          nano skills.txt
 12. Сделать коммит в одну строку.                        git add preferences.txt skills.txt  git commit -m '2files'
 13. Отправить сразу 2 файла на внешний репозиторий.      git push origin
 14. На веб интерфейсе создать файл bug_report.txt.        done
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.    done
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.   done
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.    done 
 18. Синхронизировать внешний и локальный репозиторий TXT  git pull   git push origin  